<?xml version="1.0" encoding="UTF-8" ?>

<Section id="ee76b065-9857-469c-9aca-02f0f0d58a07"
         title="User Shell"
         xmlns="urn:com.io7m.structural:8:0"
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <Section title="Usage">
    <Subsection title="Overview">
      <Paragraph>
        In addition to the API access the server provides, the <Term type="package">northpike</Term> package includes an
        interactive command-line shell for performing tasks.
      </Paragraph>
    </Subsection>

    <Subsection title="Tab Completion">
      <Paragraph>
        When running on an appropriate terminal, the shell supports tab completion for command and most command
        arguments. Begin typing the name of a command, or the name of a command argument, and then press tab. A set of
        completion options will be displayed.
      </Paragraph>
      <FormalItem title="Command Completion">
        <Image source="term0.png"
               width="495"
               height="314">Command completion.
        </Image>
      </FormalItem>
      <FormalItem title="Argument Completion">
        <Image source="term1.png"
               width="495"
               height="314">Argument completion.
        </Image>
      </FormalItem>
    </Subsection>

    <Subsection title="History">
      <Paragraph>
        When running on an appropriate terminal, the command shell stores the history of commands in memory (the history
        is not saved to disk, for security reasons). Press the up and down arrows to navigate to previously executed
        commands.
      </Paragraph>
    </Subsection>

    <Subsection title="Quoting">
      <Paragraph>
        Arguments to shell commands may be quoted using the <Term type="constant">"</Term> or
        <Term type="constant">'</Term>
        characters. This is required when calling commands that take arguments that may need to contain strings.
      </Paragraph>
      <FormalItem title="Strings">
        <Image source="term2.png"
               width="495"
               height="314">Quoting.
        </Image>
      </FormalItem>
    </Subsection>

    <Subsection title="Newlines" id="72cddf8d-32d7-44a9-b3d6-08eb9162a140">
      <Paragraph>
        Typically, the <Term type="expression">ENTER</Term> key ends the current line. This will cause the shell to
        interpret the contents of a line as a command and execute it. Pressing
        <Term type="expression">ALT+ENTER</Term>
        inserts an actual newline character without executing the command. This can be useful if an argument to a
        command needs to contain a newline character:
      </Paragraph>
      <FormalItem title="Strings">
        <Image source="term3.png"
               width="495"
               height="314">Multiline.
        </Image>
      </FormalItem>
      <Paragraph>
        When in this mode, the cursor can be moved around freely with the arrow keys to allow for editing lines.
        Pressing the <Term type="expression">ENTER</Term> key ends the multiline editing mode and executes the command.
      </Paragraph>
    </Subsection>

    <Subsection title="Formatter"
                id="0b517415-924e-4024-af06-c4a604593abd">
      <Paragraph>
        The shell provides different formatting options for tabular data.
      </Paragraph>
      <FormalItem title="Formatters">
        <Table type="genericTable">
          <Columns>
            <Column>Name</Column>
            <Column>Description</Column>
          </Columns>
          <Row>
            <Cell>PRETTY</Cell>
            <Cell>Provides pretty Unicode tables.</Cell>
          </Row>
          <Row>
            <Cell>RAW</Cell>
            <Cell>Provides raw tables.</Cell>
          </Row>
        </Table>
      </FormalItem>
      <Paragraph>
        The formatter can be set using the <Link target="ebf203c1-a05b-3a42-86ca-682d1d88842f">set</Link> command.
      </Paragraph>
      <FormalItem title="Example">
        <Verbatim><![CDATA[
[northpike]$ set --formatter PRETTY
[northpike]$ audit-search-begin
Search results: Page 1 of 1
┌────┬──────────────────────────────────────┬────────────────┬─────────────────────────────┬─────────────────────────────────────────────────────────────────────────┐
│ ID │ Owner                                │ Type           │ Time                        │ Data                                                                    │
├────┼──────────────────────────────────────┼────────────────┼─────────────────────────────┼─────────────────────────────────────────────────────────────────────────┤
│ 1  │ c5574d46-7413-43c8-b6db-31001c382ca3 │ USER_LOGGED_IN │ 2023-12-21T11:30:11.171839Z │ {UserAgent=com.io7m.northpike.client/0.0.1-SNAPSHOT, Host=10.1.6.1:536} │
└────┴──────────────────────────────────────┴────────────────┴─────────────────────────────┴─────────────────────────────────────────────────────────────────────────┘

[northpike]$ set --formatter RAW
[northpike]$ audit-search-begin
# Search results: Page 1 of 1
#--------------------------------
1 c5574d46-7413-43c8-b6db-31001c382ca3 USER_LOGGED_IN 2023-12-21T11:30:11.171839Z {UserAgent=com.io7m.northpike.client/0.0.1-SNAPSHOT, Host=10.1.6.1:536}
]]>
        </Verbatim>
      </FormalItem>
    </Subsection>

    <Subsection title="Bookmarks" id="01a85d22-da3c-4f18-ba11-d6e700345e4e">
      <Paragraph>
        The shell allows for setting <Term type="term">server bookmarks</Term>. A server bookmark is essentially
        the information required to log in to a particular server as a particular user.
      </Paragraph>
      <Paragraph>
        Bookmarks can be created with the <Link target="b113e2af-1c02-3ab1-a6ef-e9a9475892e2">bookmark-put</Link>
        command, listed with the <Link target="76b499e9-a290-3713-8adc-3aa4ce4b8465">bookmark-list</Link> command,
        and used with the <Link target="24e4a7a5-1de6-3204-86d1-44910584bf10">bookmark-login</Link> command.
      </Paragraph>
      <FormalItem title="Example">
        <Verbatim><![CDATA[
[northpike]$ bookmark-put --user example --password F7B7D37C620C70BF03353148582AC97D --hostname 10.1.6.1 --name local0

[northpike]$ bookmark-list
┌─────────────────┬─────────────────────────┬───────┬───────┬──────────────────┐
│ Name            │ Host                    │ Port  │ TLS   │ User             │
├─────────────────┼─────────────────────────┼───────┼───────┼──────────────────┤
│ local0          │ 10.1.6.1                │ 30000 │ false │ example          │
└─────────────────┴─────────────────────────┴───────┴───────┴──────────────────┘
[northpike]$ bookmark-login --name local0

[northpike]$ self
User ID: c5574d46-7413-43c8-b6db-31001c382ca3
...
]]>
        </Verbatim>
      </FormalItem>
    </Subsection>

    <Subsection title="Searching">
      <Subsection title="Description"
                  id="a14610db-3fbe-46b2-91a6-23d861f8d454">
        <Paragraph>
          The <Term type="package">northpike</Term> package exposes many commands for searching the database.
        </Paragraph>
        <Paragraph>
          All <Term type="term">search</Term> commands in the <Term type="package">northpike</Term> package provide
          automatic <Term type="term">pagination</Term>. Searches are performed by beginning a search with a
          <Term type="term">begin</Term>
          command which will yield the first page of results. Searches are then continued with
          <Term type="term">next</Term>
          and <Term type="term">previous</Term> commands which will return the next and previous pages of results,
          respectively. It is an error to try to execute a
          <Term type="term">next</Term>
          or <Term type="term">previous</Term> command without first having executed a
          <Term type="term">begin</Term> command.
        </Paragraph>
        <Paragraph>
          Each page of search results includes the number of the current page, and the number of pages of search results
          available. Attempting to seek beyond the end of the set of pages with a
          <Term type="term">next</Term>
          command is not an error; the server will simply repeatedly return the last page in the set. Similarly,
          attempting to seek before the first page of results with a <Term type="term">previous</Term> command will
          simply return the first page of results, repeatedly.
        </Paragraph>
        <Paragraph>
          The search commands typically accept different
          <Term type="term">filtering expressions</Term>
          to allow for very rich search capabilities. The syntactic forms of all the different expression types are
          listed in the following sections of the documentation.
        </Paragraph>
      </Subsection>

      <Subsection title="Name Matching"
                  id="733cf6a3-dedc-4a3c-ae1c-b8301066ece3">
        <Paragraph>
          A <Term type="term">name match expression</Term> is an expression used to filter search results. The
          expression is evaluated using the object's name as input and the object is included in search results if the
          expression evaluates to <Term type="constant">true</Term>.
        </Paragraph>
        <Paragraph>
          An expression takes one of the following forms:
        </Paragraph>
        <FormalItem title="Forms">
          <ListUnordered>
            <Item>
              <Term type="expression">with-any-name</Term>
            </Item>
            <Item>
              <Term type="expression">(with-name-equal-to n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-name-not-equal-to n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-name-similar-to n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-name-not-similar-to n)</Term>
            </Item>
          </ListUnordered>
        </FormalItem>
        <Paragraph>
          Expressions have the following semantics, given in terms of a
          <Term type="expression">match_name_evaluate</Term>
          function:
        </Paragraph>
        <FormalItem title="Semantics">
          <Verbatim>
            <xi:include href="sem-match-name.txt"
                        parse="text"/>
          </Verbatim>
        </FormalItem>
        <FormalItem title="Semantics Explanation">
          <ListUnordered>
            <Item>
              An expression <Term type="expression">with-any-name</Term> always evaluates to
              <Term type="constant">true</Term>.
            </Item>
            <Item>
              For all names <Term type="expression">m</Term>,
              <Term type="expression">(with-name-equal-to n) m</Term>
              evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">m = n</Term>.
            </Item>
            <Item>
              For all names <Term type="expression">m</Term>,
              <Term type="expression">(with-name-not-equal-to n) m</Term>
              evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">m ≠ n</Term>.
            </Item>
            <Item>
              For all names <Term type="expression">m</Term>,
              <Term type="expression">(with-name-similar-to n) m</Term>
              evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">m</Term> is sufficiently similar to <Term type="constant">n</Term> according to
              an implementation-defined, language-specific similarity function.
            </Item>
            <Item>
              For all names <Term type="expression">m</Term>,
              <Term type="expression">(with-name-not-similar-to n) m</Term>
              evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">m</Term> is not sufficiently similar to <Term type="constant">n</Term> according
              to an implementation-defined, language-specific similarity function.
            </Item>
          </ListUnordered>
        </FormalItem>
        <Paragraph>
          Specifically, the "similarity" function is currently implemented in terms of
          <LinkExternal target="https://www.postgresql.org/docs/current/textsearch-intro.html#TEXTSEARCH-MATCHING">
            PostgreSQL's full text search functionality</LinkExternal>.
        </Paragraph>
        <FormalItem title="Syntax">
          <Verbatim>
            <xi:include href="syn-match-name.txt"
                        parse="text"/>
          </Verbatim>
        </FormalItem>
      </Subsection>

      <Subsection title="Role Matching" id="063dbe54-c02c-420c-95fd-b756ca123ea3">
        <Paragraph>
          A <Term type="term">role match expression</Term> is an expression used to filter search results. The
          expression is evaluated using the object's set of roles as input and the object is included in search results
          if the expression evaluates to <Term type="constant">true</Term>.
        </Paragraph>
        <Paragraph>
          An expression takes one of the following forms:
        </Paragraph>
        <FormalItem title="Forms">
          <ListUnordered>
            <Item>
              <Term type="expression">with-any-roles</Term>
            </Item>
            <Item>
              <Term type="expression">(with-roles-equal-to n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-roles-not-equal-to n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-roles-superset-of n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-roles-subset-of n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-roles-overlapping n)</Term>
            </Item>
          </ListUnordered>
        </FormalItem>
        <Paragraph>
          Expressions have the following semantics, given in terms of a
          <Term type="expression">match_role_evaluate</Term> function:
        </Paragraph>
        <FormalItem title="Semantics">
          <Verbatim><xi:include href="sem-match-role.txt" parse="text"/></Verbatim>
        </FormalItem>
        <FormalItem title="Semantics Explanation">
          <ListUnordered>
            <Item>
              An expression <Term type="expression">with-any-roles</Term> always evaluates to
              <Term type="constant">true</Term>.
            </Item>
            <Item>
              For all descriptions <Term type="expression">s</Term>,
              <Term type="expression">(with-roles-equal-to t) s</Term> evaluates to <Term type="constant">true</Term>
              iff <Term type="constant">t = s</Term>. Note that sets are not ordered.
            </Item>
            <Item>
              For all descriptions <Term type="expression">s</Term>,
              <Term type="expression">(with-roles-not-equal-to t) s</Term> evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">s ≠ t</Term>. Note that sets are not ordered.
            </Item>
            <Item>
              For all descriptions <Term type="expression">s</Term>,
              <Term type="expression">(with-roles-subset-of t) s</Term> evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">s</Term> is a subset of <Term type="constant">t</Term>.
            </Item>
            <Item>
              For all descriptions <Term type="expression">s</Term>,
              <Term type="expression">(with-roles-superset-of t) s</Term> evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">s</Term> is a superset of <Term type="constant">t</Term>.
            </Item>
            <Item>
              For all descriptions <Term type="expression">s</Term>,
              <Term type="expression">(with-roles-overlapping t) s</Term> evaluates to
              <Term type="constant">true</Term>
              iff there exists some element
              <Term type="constant">e</Term>
              that is present in both
              <Term type="constant">s</Term> and <Term type="constant">t</Term>.
            </Item>
          </ListUnordered>
        </FormalItem>
        <FormalItem title="Syntax">
          <Verbatim><xi:include href="syn-match-role.txt" parse="text"/></Verbatim>
        </FormalItem>
      </Subsection>

      <Subsection title="Label Matching" id="b77e4899-00ad-4cab-85e1-069b88a8987d">
        <Paragraph>
          A <Term type="term">label match expression</Term> is an expression used to filter search results. The
          expression is evaluated using the object's set of labels as input and the object is included in search results
          if the expression evaluates to <Term type="constant">true</Term>.
        </Paragraph>
        <Paragraph>
          An expression takes one of the following forms:
        </Paragraph>
        <FormalItem title="Forms">
          <ListUnordered>
            <Item>
              <Term type="expression">with-any-labels</Term>
            </Item>
            <Item>
              <Term type="expression">(with-labels-equal-to n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-labels-not-equal-to n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-labels-superset-of n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-labels-subset-of n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-labels-overlapping n)</Term>
            </Item>
          </ListUnordered>
        </FormalItem>
        <Paragraph>
          Expressions have the following semantics, given in terms of a
          <Term type="expression">match_label_evaluate</Term> function:
        </Paragraph>
        <FormalItem title="Semantics">
          <Verbatim><xi:include href="sem-match-label.txt" parse="text"/></Verbatim>
        </FormalItem>
        <FormalItem title="Semantics Explanation">
          <ListUnordered>
            <Item>
              An expression <Term type="expression">with-any-labels</Term> always evaluates to
              <Term type="constant">true</Term>.
            </Item>
            <Item>
              For all descriptions <Term type="expression">s</Term>,
              <Term type="expression">(with-labels-equal-to t) s</Term> evaluates to <Term type="constant">true</Term>
              iff <Term type="constant">t = s</Term>. Note that sets are not ordered.
            </Item>
            <Item>
              For all descriptions <Term type="expression">s</Term>,
              <Term type="expression">(with-labels-not-equal-to t) s</Term> evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">s ≠ t</Term>. Note that sets are not ordered.
            </Item>
            <Item>
              For all descriptions <Term type="expression">s</Term>,
              <Term type="expression">(with-labels-subset-of t) s</Term> evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">s</Term> is a subset of <Term type="constant">t</Term>.
            </Item>
            <Item>
              For all descriptions <Term type="expression">s</Term>,
              <Term type="expression">(with-labels-superset-of t) s</Term> evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">s</Term> is a superset of <Term type="constant">t</Term>.
            </Item>
            <Item>
              For all descriptions <Term type="expression">s</Term>,
              <Term type="expression">(with-labels-overlapping t) s</Term> evaluates to
              <Term type="constant">true</Term>
              iff there exists some element
              <Term type="constant">e</Term>
              that is present in both
              <Term type="constant">s</Term> and <Term type="constant">t</Term>.
            </Item>
          </ListUnordered>
        </FormalItem>
        <FormalItem title="Syntax">
          <Verbatim><xi:include href="syn-match-label.txt" parse="text"/></Verbatim>
        </FormalItem>
      </Subsection>

      <Subsection title="Description Matching" id="18bd4daf-7b68-4f8f-88f8-4aaf00100c2b">
        <Paragraph>
          A <Term type="term">description match expression</Term> is an expression used to filter search results. The
          expression is evaluated using the object's description as input and the object is included in search results
          if the expression evaluates to <Term type="constant">true</Term>.
        </Paragraph>
        <Paragraph>
          An expression takes one of the following forms:
        </Paragraph>
        <FormalItem title="Forms">
          <ListUnordered>
            <Item>
              <Term type="expression">with-any-description</Term>
            </Item>
            <Item>
              <Term type="expression">(with-description-equal-to n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-description-not-equal-to n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-description-similar-to n)</Term>
            </Item>
            <Item>
              <Term type="expression">(with-description-not-similar-to n)</Term>
            </Item>
          </ListUnordered>
        </FormalItem>
        <Paragraph>
          Expressions have the following semantics, given in terms of a
          <Term type="expression">match_description_evaluate</Term>
          function:
        </Paragraph>
        <FormalItem title="Semantics">
          <Verbatim><xi:include href="sem-match-description.txt" parse="text"/></Verbatim>
        </FormalItem>
        <FormalItem title="Semantics Explanation">
          <ListUnordered>
            <Item>
              An expression <Term type="expression">with-any-description</Term> always evaluates to
              <Term type="constant">true</Term>.
            </Item>
            <Item>
              For all descriptions <Term type="expression">m</Term>,
              <Term type="expression">(with-description-equal-to n) m</Term> evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">m = n</Term>.
            </Item>
            <Item>
              For all descriptions <Term type="expression">m</Term>,
              <Term type="expression">(with-description-not-equal-to n) m</Term> evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">m ≠ n</Term>.
            </Item>
            <Item>
              For all descriptions <Term type="expression">m</Term>,
              <Term type="expression">(with-description-similar-to n) m</Term> evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">m</Term> is sufficiently similar to <Term type="constant">n</Term> according
              to an implementation-defined, language-specific similarity function.
            </Item>
            <Item>
              For all descriptions <Term type="expression">m</Term>,
              <Term type="expression">(with-description-not-similar-to n) m</Term> evaluates to
              <Term type="constant">true</Term>
              iff <Term type="constant">m</Term> is not sufficiently similar to <Term type="constant">n</Term> according
              to an implementation-defined, language-specific similarity function.
            </Item>
          </ListUnordered>
        </FormalItem>
        <Paragraph>
          Specifically, the "similarity" function is currently implemented in terms of
          <LinkExternal target="https://www.postgresql.org/docs/current/textsearch-intro.html#TEXTSEARCH-MATCHING">
            PostgreSQL's full text search functionality
          </LinkExternal>.
        </Paragraph>
        <FormalItem title="Syntax">
          <Verbatim><xi:include href="syn-match-description.txt" parse="text"/></Verbatim>
        </FormalItem>
      </Subsection>
    </Subsection>
  </Section>

  <Section title="Shell Command Reference">
    <xi:include href="scmd-agent-get.xml"/>
    <xi:include href="scmd-agent-label-assign.xml"/>
    <xi:include href="scmd-agent-label-delete.xml"/>
    <xi:include href="scmd-agent-label-get.xml"/>
    <xi:include href="scmd-agent-label-put.xml"/>
    <xi:include href="scmd-agent-label-search-begin.xml"/>
    <xi:include href="scmd-agent-label-search-next.xml"/>
    <xi:include href="scmd-agent-label-search-previous.xml"/>
    <xi:include href="scmd-agent-label-unassign.xml"/>
    <xi:include href="scmd-agent-login-challenge-agent-create.xml"/>
    <xi:include href="scmd-agent-login-challenge-delete.xml"/>
    <xi:include href="scmd-agent-login-challenge-search-begin.xml"/>
    <xi:include href="scmd-agent-login-challenge-search-next.xml"/>
    <xi:include href="scmd-agent-login-challenge-search-previous.xml"/>
    <xi:include href="scmd-agent-put.xml"/>
    <xi:include href="scmd-agent-search-begin.xml"/>
    <xi:include href="scmd-agent-search-next.xml"/>
    <xi:include href="scmd-agent-search-previous.xml"/>
    <xi:include href="scmd-agent-work-items.xml"/>
    <xi:include href="scmd-agents-connected.xml"/>
    <xi:include href="scmd-assignment-get.xml"/>
    <xi:include href="scmd-assignment-put.xml"/>
    <xi:include href="scmd-assignment-search-begin.xml"/>
    <xi:include href="scmd-assignment-search-next.xml"/>
    <xi:include href="scmd-assignment-search-previous.xml"/>
    <xi:include href="scmd-audit-search-begin.xml"/>
    <xi:include href="scmd-audit-search-next.xml"/>
    <xi:include href="scmd-audit-search-previous.xml"/>
    <xi:include href="scmd-bookmark-list.xml"/>
    <xi:include href="scmd-bookmark-login.xml"/>
    <xi:include href="scmd-bookmark-put.xml"/>
    <xi:include href="scmd-bookmark-remove.xml"/>
    <xi:include href="scmd-help.xml"/>
    <xi:include href="scmd-login.xml"/>
    <xi:include href="scmd-logout.xml"/>
    <xi:include href="scmd-plan-delete.xml"/>
    <xi:include href="scmd-plan-get.xml"/>
    <xi:include href="scmd-plan-put.xml"/>
    <xi:include href="scmd-plan-search-begin.xml"/>
    <xi:include href="scmd-plan-search-next.xml"/>
    <xi:include href="scmd-plan-search-previous.xml"/>
    <xi:include href="scmd-plan-validate.xml"/>
    <xi:include href="scmd-public-key-delete.xml"/>
    <xi:include href="scmd-public-key-get.xml"/>
    <xi:include href="scmd-public-key-put.xml"/>
    <xi:include href="scmd-public-key-search-begin.xml"/>
    <xi:include href="scmd-public-key-search-next.xml"/>
    <xi:include href="scmd-public-key-search-previous.xml"/>
    <xi:include href="scmd-repository-get.xml"/>
    <xi:include href="scmd-repository-public-key-assign.xml"/>
    <xi:include href="scmd-repository-public-key-unassign.xml"/>
    <xi:include href="scmd-repository-public-keys-assigned.xml"/>
    <xi:include href="scmd-repository-put.xml"/>
    <xi:include href="scmd-repository-search-begin.xml"/>
    <xi:include href="scmd-repository-search-next.xml"/>
    <xi:include href="scmd-repository-search-previous.xml"/>
    <xi:include href="scmd-scm-providers-supported.xml"/>
    <xi:include href="scmd-self.xml"/>
    <xi:include href="scmd-set.xml"/>
    <xi:include href="scmd-tool-execution-get.xml"/>
    <xi:include href="scmd-tool-execution-put.xml"/>
    <xi:include href="scmd-tool-execution-search-begin.xml"/>
    <xi:include href="scmd-tool-execution-search-next.xml"/>
    <xi:include href="scmd-tool-execution-search-previous.xml"/>
    <xi:include href="scmd-tool-execution-validate.xml"/>
    <xi:include href="scmd-user-search-begin.xml"/>
    <xi:include href="scmd-user-search-next.xml"/>
    <xi:include href="scmd-user-search-previous.xml"/>
    <xi:include href="scmd-version.xml"/>
  </Section>

</Section>
